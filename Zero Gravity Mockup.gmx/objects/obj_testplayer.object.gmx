<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_square</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Stats created in spawn_player()
mass=20;
gun_type = 0;
player_health = 20;
team = 0;

bullet_ready = 0;
bullet_offset = 43;
grapple_shot=false;
grapple_hit=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hitbox_top = y + 50;
hitbox_bot = y - 50;
hitbox_right = x + 50;
hitbox_left = x - 50;

bullet_ready += 1;

if collision_rectangle(hitbox_left, hitbox_top, hitbox_right, hitbox_bot, obj_vertWall, false, true) != noone
{
hspeed=0;
}

if collision_rectangle(hitbox_left, hitbox_top, hitbox_right, hitbox_bot, obj_horizWall, false, true) != noone
{
vspeed=0;
}

image_angle = point_direction(x, y, mouse_x, mouse_y)

if mouse_button= mb_left
{
    shoot(20, 10, 5, 2, 0);
    // Syntax: shoot(rate_of_fire, bullet_mass, bullet_speed, bullet_damage, team)
    
    // Note: a lower rate_of_fire makes the player shoot faster.
}

if mouse_check_button_pressed(mb_right)
{
    if collision_rectangle(hitbox_left, hitbox_top, hitbox_right, hitbox_bot, obj_vertWall, false, true) or collision_rectangle(hitbox_left, hitbox_top, hitbox_right, hitbox_bot, obj_horizWall, false, true)
    {
        speed = 0;
    }
}

if mouse_check_button_released(mb_right)
{
    if collision_rectangle(hitbox_left, hitbox_top, hitbox_right, hitbox_bot, obj_vertWall, false, true) or collision_rectangle(hitbox_left, hitbox_top, hitbox_right, hitbox_bot, obj_horizWall, false, true)
    {
        direction=point_direction(x, y, mouse_x, mouse_y);
        speed = 10;
    }
}

if keyboard_check_pressed(vk_space)
{
    if grapple_shot == false
    {
        nearest_grapple = instance_nearest(mouse_x, mouse_y, obj_grapple);
        shot_angle=point_direction(x,y,nearest_grapple.x,nearest_grapple.y);
        hook = instance_create(x+bullet_offset*dcos(shot_angle), y+bullet_offset*dsin(shot_angle), obj_grapplehook);
        obj_grapplehook.direction = point_direction(x, y, nearest_grapple.x, nearest_grapple.y);
        hspeed-=dcos(shot_angle)*obj_grapplehook.speed*obj_grapplehook.mass/mass;
        vspeed+=dsin(shot_angle)*obj_grapplehook.speed*obj_grapplehook.mass/mass;
        
        grapple_shot = true;
    }
    else
    {
        grapple_shot = false;
        with (obj_grapplehook){instance_destroy()};
        grapple_hit = false;
    }
}


if grapple_hit == true
{
    grapple_position= instance_nearest(obj_grapplehook.x, obj_grapplehook.y, obj_grapple);
    if point_distance(x,y,grapple_position.x,grapple_position.y)&gt;obj_grapplehook.rope_length
    {
        rope_dir=point_direction(grapple_position.x,grapple_position.y,x,y);
        tangent=(rope_dir+90)%360;
        new_velocity=dot_product(speed*cos(degtorad(direction)),speed*sin(degtorad(direction)),cos(degtorad(tangent)),sin(degtorad(tangent)));
        direction=tangent;
        speed=new_velocity;
        x= grapple_position.x + lengthdir_x(obj_grapplehook.rope_length,rope_dir);
        y= grapple_position.y + lengthdir_y(obj_grapplehook.rope_length,rope_dir);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
